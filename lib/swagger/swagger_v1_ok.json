{
    "swagger": "2.0",
    "info": {
        "title": "NETPAR2015 API",
        "description": "API for NETPAR2015",
        "version": "1.0.0",
        "contact": {
            "name": "UKE-BI-WUSA (B&J) 2016",
            "email": "b.jarzab@uke.gov.pl.com"
        },
        "termsOfService": "https://netpar2015.uke.gov.pl/api/v1/"
    },
    "host": "localhost:3000",
    "schemes": [
        "http"
    ],
    "basePath": "/api/v1",
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "basicAuth": {
            "type": "basic",
            "description": "HTTP Basic Authentication."
        },
        "apiAuthUserKey": {
            "name": "X-User-Email",
            "type": "apiKey",
            "in": "header",
            "description": "API user_email"
        },
        "apiAuthTokenKey": {
            "name": "X-User-Token",
            "type": "apiKey",
            "in": "header",
            "description": "API user_token"
        }
    },
    "paths": {
        "/certificates/lot": {
            "get": {
                "summary": "Returns all certificates for category L - LOT",
                "description": "The certificates/lot endpoint returns information about the UKE Certificates in aviation (LOT) services. \nThe response includes the display number and other details about each certificate, and lists the certificates in the\nproper display order.\n",
                "security": [
                    {
                        "apiAuthUserKey": []
                    },
                    {
                        "apiAuthTokenKey": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-User-Email",
                        "in": "header",
                        "type": "string",
                        "description": "User Email for Authentication.",
                        "required": true
                    },
                    {
                        "name": "X-User-Token",
                        "in": "header",
                        "type": "string",
                        "description": "User Token for Authentication.",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is zero."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 10, maximum is 100.",
                        "default": 10
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/certificates/mor": {
            "get": {
                "summary": "Returns all certificates for category M - MOR",
                "description": "The certificates/mor endpoint returns information about the UKE Certificates in marine (MOR) services. \nThe response includes the display number and other details about each certificate, and lists the certificates in the\nproper display order.\n",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is zero."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 5, maximum is 100."
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/certificates/ra": {
            "get": {
                "summary": "Returns all certificates for category R - RA",
                "description": "The certificates/ra endpoint returns information about the UKE Certificates in amateur (RA) services. \nThe response includes the display number and other details about each certificate, and lists the certificates in the\nproper display order.\n",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is zero."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 5, maximum is 100."
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/certificates/search_by_number": {
            "get": {
                "summary": "Returns all certificates for certificate[:number] = params[:number]",
                "description": "The certificates/search_by_number endpoint returns information for searched params[:number]. The response includes the display number and other details about each certificate",
                "parameters": [
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Number for searched certificates. Example: B-12",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/certificates/search_by_customer_pesel": {
            "get": {
                "summary": "Returns all certificates for certificate.customer[:pesel] = params[:pesel]",
                "description": "The certificates/search_by_customer_pesel endpoint returns information for searched params[:pesel]. The response includes the display number and other details about each certificate",
                "parameters": [
                    {
                        "name": "pesel",
                        "in": "query",
                        "description": "Customer PESEL for searched certificates. Example: 69070610090",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/estimates/price": {
            "get": {
                "summary": "Price Estimates",
                "description": "The Price Estimates endpoint returns an estimated price range\nfor each product offered at a given location. The price estimate is\nprovided as a formatted string with the full price range and the localized\ncurrency symbol.<br><br>The response also includes low and high estimates,\nand the [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code for\nsituations requiring currency conversion. When surge is active for a particular\nproduct, its surge_multiplier will be greater than 1, but the price estimate\nalready factors in this multiplier.\n",
                "parameters": [
                    {
                        "name": "start_latitude",
                        "in": "query",
                        "description": "Latitude component of start location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "start_longitude",
                        "in": "query",
                        "description": "Longitude component of start location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "end_latitude",
                        "in": "query",
                        "description": "Latitude component of end location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "end_longitude",
                        "in": "query",
                        "description": "Longitude component of end location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    }
                ],
                "tags": [
                    "Estimates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of price estimates by product",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PriceEstimate"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/estimates/time": {
            "get": {
                "summary": "Time Estimates",
                "description": "The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.",
                "parameters": [
                    {
                        "name": "start_latitude",
                        "in": "query",
                        "description": "Latitude component of start location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "start_longitude",
                        "in": "query",
                        "description": "Longitude component of start location.",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "customer_uuid",
                        "in": "query",
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique customer identifier to be used for experience customization."
                    },
                    {
                        "name": "product_id",
                        "in": "query",
                        "type": "string",
                        "description": "Unique identifier representing a specific product for a given latitude & longitude."
                    }
                ],
                "tags": [
                    "Estimates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of products",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "summary": "User Profile",
                "description": "The User Profile endpoint returns information about the NETPAR2015 user that has authorized with the application.",
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Profile information for a user",
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/history": {
            "get": {
                "summary": "User Activity",
                "description": "The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is zero."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 5, maximum is 100."
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "History information for the given user",
                        "schema": {
                            "$ref": "#/definitions/Activities"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Customer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique identifier representing a specific customer."
                },
                "human": {
                    "type": "boolean",
                    "description": "The Customer is a human?"
                },
                "name": {
                    "type": "string",
                    "description": "Display name of customer."
                },
                "given_names": {
                    "type": "string",
                    "description": "Display given names of customer."
                },
                "address_city": {
                    "type": "string",
                    "description": "Display address city of customer."
                },
                "address_street": {
                    "type": "string",
                    "description": "Display address street of customer."
                },
                "address_house": {
                    "type": "string",
                    "description": "Display address house of customer."
                },
                "address_number": {
                    "type": "string",
                    "description": "Display address number of customer."
                },
                "address_postal_code": {
                    "type": "string",
                    "description": "Display address postal code of customer."
                },
                "address_post_office": {
                    "type": "string",
                    "description": "Display address post office of customer."
                },
                "address_pobox": {
                    "type": "string",
                    "description": "Display address pobox of division."
                }
            }
        },
        "Division": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique identifier representing a specific division."
                },
                "name": {
                    "type": "string",
                    "description": "Display name of division."
                },
                "english_name": {
                    "type": "string",
                    "description": "Display name of division for english."
                },
                "short_name": {
                    "type": "string",
                    "description": "Display short name of division."
                }
            }
        },
        "Certificate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique identifier representing a specific certificate."
                },
                "number": {
                    "type": "string",
                    "description": "Display number of certificate."
                },
                "date_of_issue": {
                    "type": "string",
                    "description": "Date of issue of certificate."
                },
                "valid_thru": {
                    "type": "string",
                    "description": "Valid thru."
                },
                "certificate_status": {
                    "type": "string",
                    "description": "Certificate status. W - valid, N - no valid."
                },
                "note": {
                    "type": "string",
                    "description": "Note."
                },
                "category": {
                    "type": "string",
                    "description": "Certificate category. L - (LOT) aviation services, M - (MOR) marine services, R - (RA) amateur services."
                },
                "division": {
                    "$ref": "#/definitions/Division"
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                }
            }
        },
        "Product": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles."
                },
                "description": {
                    "type": "string",
                    "description": "Description of product."
                },
                "display_name": {
                    "type": "string",
                    "description": "Display name of product."
                },
                "capacity": {
                    "type": "string",
                    "description": "Capacity of product. For example, 4 people."
                },
                "image": {
                    "type": "string",
                    "description": "Image URL representing the product."
                }
            }
        },
        "PriceEstimate": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles"
                },
                "currency_code": {
                    "type": "string",
                    "description": "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
                },
                "display_name": {
                    "type": "string",
                    "description": "Display name of product."
                },
                "estimate": {
                    "type": "string",
                    "description": "Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or \"Metered\" for TAXI."
                },
                "low_estimate": {
                    "type": "number",
                    "description": "Lower bound of the estimated price."
                },
                "high_estimate": {
                    "type": "number",
                    "description": "Upper bound of the estimated price."
                },
                "surge_multiplier": {
                    "type": "number",
                    "description": "Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier."
                }
            }
        },
        "Profile": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the NETPAR2015 user."
                },
                "email": {
                    "type": "string",
                    "description": "Email address of the NETPAR2015 user"
                },
                "authentication_token": {
                    "type": "string",
                    "description": "authentication token of the NETPAR2015 user."
                }
            }
        },
        "Activity": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "Unique identifier for the activity"
                }
            }
        },
        "Activities": {
            "type": "object",
            "properties": {
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Position in pagination."
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of items to retrieve (100 max)."
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of items available."
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Activity"
                    }
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}