{
    "swagger": "2.0",
    "info": {
        "title": "NETPAR2015 API",
        "description": "Attention! If you want to use this API, you need to use sessions/login in the first place. After correct login, your \"authentication_token\" will be a key for authorization to run all actions.",
        "version": "1.0.1",
        "contact": {
            "name": "UKE-BI-WUSA (B&J) 2016",
            "email": "b.jarzab@uke.gov.pl.com"
        },
        "termsOfService": "https://netpar2015.uke.gov.pl/api/v1/"
    },
    "host": "localhost:3000",
    "schemes": [
        "http"
    ],
    "basePath": "/api/v1",
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "apiAuthTokenKey": {
            "name": "Authorization",
            "type": "apiKey",
            "in": "header",
            "description": "API authentication_token"
        }
    },
    "paths": {
        "/login": {
            "post": {
                "summary": "Login in NETPAR2015 API and return user profile",
                "description": "The login endpoint created user session and returrns user[:authentication_token].",
                "tags": [
                    "Sessions"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "The login JSON you want to post",
                        "schema": {
                            "$ref": "#/definitions/LoginParams"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of user profile",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error"
                    }
                }
            }
        },
        "/logout": {
            "delete": {
                "summary": "Logged out from NETPAR2015 and destroy user[:authentication_token]",
                "description": "The logout endpoint destroyed user session and recreate user[:authentication_token].",
                "security": [
                    {
                        "apiAuthTokenKey": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "type": "string",
                        "description": "Authorization token."
                    }
                ],
                "tags": [
                    "Sessions"
                ],
                "responses": {
                    "204": {
                        "description": "No content head"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/certificates/lot": {
            "get": {
                "summary": "Returns all certificates for category L - LOT",
                "description": "The certificates/lot endpoint returns information about the UKE Certificates in aviation (LOT) services. \nThe response includes the display number and other details about each certificate, and lists the certificates in the\nproper display order.\n",
                "security": [
                    {
                        "apiAuthTokenKey": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "type": "string",
                        "description": "Authorization token."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 10, maximum is 100."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is 0."
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/certificates/mor": {
            "get": {
                "summary": "Returns all certificates for category M - MOR",
                "description": "The certificates/mor endpoint returns information about the UKE Certificates in marine (MOR) services. \nThe response includes the display number and other details about each certificate, and lists the certificates in the\nproper display order.\n",
                "security": [
                    {
                        "apiAuthTokenKey": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "type": "string",
                        "description": "Authorization token."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 10, maximum is 100."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is 0."
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/certificates/ra": {
            "get": {
                "summary": "Returns all certificates for category R - RA",
                "description": "The certificates/ra endpoint returns information about the UKE Certificates in amateur (RA) services. The response includes the display number and other details about each certificate, and lists the certificates in the proper display order.\n",
                "security": [
                    {
                        "apiAuthTokenKey": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "type": "string",
                        "description": "Authorization token."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 10, maximum is 100."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is 0."
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/certificates/lot_search_by_number": {
            "get": {
                "summary": "Returns all certificates for Certificate.where(category: \"L\", number: params[:number].upcase)",
                "description": "The certificates/search_by_number endpoint returns information for searched params[:number]. The response includes the display number and other details about each certificate of category \"L\"",
                "security": [
                    {
                        "apiAuthTokenKey": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "type": "string",
                        "description": "Authorization token."
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Number for searched certificates. For example: L-1234",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 10, maximum is 100."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is 0."
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/certificates/mor_search_by_number": {
            "get": {
                "summary": "Returns all certificates for Certificate.where(category: \"M\", number: params[:number].upcase)",
                "description": "The certificates/search_by_number endpoint returns information for searched params[:number]. The response includes the display number and other details about each certificate of category \"M\"",
                "security": [
                    {
                        "apiAuthTokenKey": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "type": "string",
                        "description": "Authorization token."
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Number for searched certificates. For example: MA-00123",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 10, maximum is 100."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is 0."
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/certificates/ra_search_by_number": {
            "get": {
                "summary": "Returns all certificates for Certificate.where(category: \"R\", number: params[:number].upcase)",
                "description": "The certificates/search_by_number endpoint returns information for searched params[:number]. The response includes the display number and other details about each certificate of category \"R\"",
                "security": [
                    {
                        "apiAuthTokenKey": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "type": "string",
                        "description": "Authorization token."
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Number for searched certificates. For example: B-1234",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 10, maximum is 100."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is 0."
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/certificates/all_search_by_number": {
            "get": {
                "summary": "Returns all certificates for Certificate.where(number: params[:number].upcase)",
                "description": "The certificates/search_by_number endpoint returns information for searched params[:number]. The response includes the display number and other details about each certificate",
                "security": [
                    {
                        "apiAuthTokenKey": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "type": "string",
                        "description": "Authorization token."
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Number for searched certificates. For example: B-12",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 10, maximum is 100."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is 0."
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/certificates/lot_search_by_customer_pesel": {
            "get": {
                "summary": "Returns all certificates for Certificate.joins(:customer).where(category: \"L\", customers: {pesel: params[:pesel]})",
                "description": "The certificates/search_by_customer_pesel endpoint returns information for searched params[:pesel]. The response includes the display number and other details about each certificate of category \"L\"",
                "security": [
                    {
                        "apiAuthTokenKey": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "type": "string",
                        "description": "Authorization token."
                    },
                    {
                        "name": "pesel",
                        "in": "query",
                        "description": "Customer PESEL for searched certificates. For example: 69070610090",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 10, maximum is 100."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is 0."
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/certificates/mor_search_by_customer_pesel": {
            "get": {
                "summary": "Returns all certificates for Certificate.joins(:customer).where(category: \"M\", customers: {pesel: params[:pesel]})",
                "description": "The certificates/search_by_customer_pesel endpoint returns information for searched params[:pesel]. The response includes the display number and other details about each certificate of category \"M\"",
                "security": [
                    {
                        "apiAuthTokenKey": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "type": "string",
                        "description": "Authorization token."
                    },
                    {
                        "name": "pesel",
                        "in": "query",
                        "description": "Customer PESEL for searched certificates. For example: 69070610090",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 10, maximum is 100."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is 0."
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/certificates/ra_search_by_customer_pesel": {
            "get": {
                "summary": "Returns all certificates for Certificate.joins(:customer).where(category: \"R\", customers: {pesel: params[:pesel]})",
                "description": "The certificates/search_by_customer_pesel endpoint returns information for searched params[:pesel]. The response includes the display number and other details about each certificate of category \"R\"",
                "security": [
                    {
                        "apiAuthTokenKey": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "type": "string",
                        "description": "Authorization token."
                    },
                    {
                        "name": "pesel",
                        "in": "query",
                        "description": "Customer PESEL for searched certificates. For example: 69070610090",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 10, maximum is 100."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is 0."
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/certificates/all_search_by_customer_pesel": {
            "get": {
                "summary": "Returns all certificates for Certificate.joins(:customer).where(customers: {pesel: params[:pesel]})",
                "description": "The certificates/search_by_customer_pesel endpoint returns information for searched params[:pesel]. The response includes the display number and other details about each certificate",
                "security": [
                    {
                        "apiAuthTokenKey": []
                    }
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "type": "string",
                        "description": "Authorization token."
                    },
                    {
                        "name": "pesel",
                        "in": "query",
                        "description": "Customer PESEL for searched certificates. For example: 69070610090",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 10, maximum is 100."
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is 0."
                    }
                ],
                "tags": [
                    "Certificates"
                ],
                "responses": {
                    "200": {
                        "description": "An array of certificates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Certificate"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Citizenship": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique identifier representing a specific citizenship."
                },
                "name": {
                    "type": "string",
                    "description": "Display name of citizenship."
                },
                "short": {
                    "type": "string",
                    "description": "Display short name of citizenship."
                }
            }
        },
        "Customer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique identifier representing a specific customer."
                },
                "human": {
                    "type": "boolean",
                    "description": "The Customer is a human?"
                },
                "name": {
                    "type": "string",
                    "description": "Display name of customer."
                },
                "given_names": {
                    "type": "string",
                    "description": "Display given names of customer."
                },
                "address_city": {
                    "type": "string",
                    "description": "Display address city of customer."
                },
                "address_street": {
                    "type": "string",
                    "description": "Display address street of customer."
                },
                "address_house": {
                    "type": "string",
                    "description": "Display address house of customer."
                },
                "address_number": {
                    "type": "string",
                    "description": "Display address number of customer."
                },
                "address_postal_code": {
                    "type": "string",
                    "description": "Display address postal code of customer."
                },
                "address_post_office": {
                    "type": "string",
                    "description": "Display address post office of customer."
                },
                "address_pobox": {
                    "type": "string",
                    "description": "Display address post office box of division."
                },
                "c_address_city": {
                    "type": "string",
                    "description": "Display address city of correspondence address for customer."
                },
                "c_address_street": {
                    "type": "string",
                    "description": "Display address street of correspondence address for customer."
                },
                "c_address_house": {
                    "type": "string",
                    "description": "Display address house of correspondence address for customer."
                },
                "c_address_number": {
                    "type": "string",
                    "description": "Display address number of correspondence address for customer."
                },
                "c_address_postal_code": {
                    "type": "string",
                    "description": "Display address postal code of correspondence address for customer."
                },
                "c_address_post_office": {
                    "type": "string",
                    "description": "Display address post office of correspondence address for customer."
                },
                "c_address_pobox": {
                    "type": "string",
                    "description": "Display address post office box of correspondence address for customer."
                },
                "nip": {
                    "type": "string",
                    "description": "Display nip of customer."
                },
                "regon": {
                    "type": "string",
                    "description": "Display regon of customer."
                },
                "pesel": {
                    "type": "string",
                    "description": "Display pesel of customer."
                },
                "birth_date": {
                    "type": "string",
                    "description": "Display birth date of customer."
                },
                "birth_place": {
                    "type": "string",
                    "description": "Display birth place of customer."
                },
                "fathers_name": {
                    "type": "string",
                    "description": "Display fathers name of customer."
                },
                "mothers_name": {
                    "type": "string",
                    "description": "Display mothers name of customer."
                },
                "family_name": {
                    "type": "string",
                    "description": "Display family name of customer."
                },
                "citizenship": {
                    "$ref": "#/definitions/Citizenship"
                },
                "phone": {
                    "type": "string",
                    "description": "Display phone of customer."
                },
                "fax": {
                    "type": "string",
                    "description": "Display fax of customer."
                },
                "email": {
                    "type": "string",
                    "description": "Display email of customer."
                },
                "note": {
                    "type": "string",
                    "description": "Display note of customer."
                }
            }
        },
        "Division": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique identifier representing a specific division."
                },
                "name": {
                    "type": "string",
                    "description": "Display name of division."
                },
                "english_name": {
                    "type": "string",
                    "description": "Display name of division for english."
                },
                "short_name": {
                    "type": "string",
                    "description": "Display short name of division."
                }
            }
        },
        "Certificate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique identifier representing a specific certificate."
                },
                "number": {
                    "type": "string",
                    "description": "Display number of certificate."
                },
                "date_of_issue": {
                    "type": "string",
                    "description": "Date of issue of certificate."
                },
                "valid_thru": {
                    "type": "string",
                    "description": "Valid thru."
                },
                "certificate_status": {
                    "type": "string",
                    "description": "Certificate status. W - valid, N - no valid."
                },
                "note": {
                    "type": "string",
                    "description": "Note."
                },
                "category": {
                    "type": "string",
                    "description": "Certificate category. L - (LOT) aviation services, M - (MOR) marine services, R - (RA) amateur services."
                },
                "division": {
                    "$ref": "#/definitions/Division"
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "document_image": {
                    "$ref": "#/definitions/document_image"
                }
            }
        },
        "user": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the NETPAR2015 user."
                },
                "email": {
                    "type": "string",
                    "description": "Email address of the NETPAR2015 user"
                },
                "authentication_token": {
                    "type": "string",
                    "description": "authentication token of the NETPAR2015 user."
                }
            }
        },
        "document_image": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique identifier a specific attachment file."
                },
                "filename": {
                    "type": "string",
                    "description": "Name of attachment file."
                },
                "content_type": {
                    "type": "string",
                    "description": "Type of attachment file."
                },
                "size": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Size of attachment file."
                },
                "url": {
                    "type": "string",
                    "description": "url of attachment file."
                }
            }
        },
        "LoginParams": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}